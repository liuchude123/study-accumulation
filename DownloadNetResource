	  1.https

    public static void main(String[] args) {
        String url = "https://127.0.0.1:8081/datacollect/webjars/springfox-swagger-ui/images/logo_small.png";
        String[] split = url.split("\\/");
        String fileName = split[split.length - 1];
        saveFile(getInputStream(url), new File("/test/", fileName));
    }

    public static InputStream getInputStream(String url) {
        try {
            TrustManager[] trustAllCerts = new TrustManager[]{
                    new X509TrustManager() {
                        public java.security.cert.X509Certificate[] getAcceptedIssuers() {
                            return null;
                        }

                        public void checkClientTrusted(X509Certificate[] certs, String authType) {
                        }

                        public void checkServerTrusted(X509Certificate[] certs, String authType) {
                        }
                    }
            };

            SSLContext sc = SSLContext.getInstance("SSL");
            sc.init(null, trustAllCerts, new java.security.SecureRandom());
            HttpsURLConnection.setDefaultSSLSocketFactory(sc.getSocketFactory());

            HostnameVerifier allHostsValid = new HostnameVerifier() {
                public boolean verify(String hostname, SSLSession session) {
                    return true;
                }
            };
            HttpsURLConnection.setDefaultHostnameVerifier(allHostsValid);

            HttpsURLConnection httpsURLConnection = (HttpsURLConnection) new URL(url).openConnection();
            return httpsURLConnection.getInputStream();
        } catch (IOException e) {
            e.printStackTrace();
        } catch (Exception e) {
            e.printStackTrace();
        }
        return null;
    }

    public static void saveFile(InputStream is, File dstFile) {
        FileOutputStream fos = null;
        File parentFile = dstFile.getParentFile();
        if (!parentFile.exists()) {
            parentFile.mkdirs();
        }
        try {
            fos = new FileOutputStream(dstFile);
            byte[] buff = new byte[1024 * 4];
            int len;
            while ((len = is.read(buff)) != -1) {
                fos.write(buff, 0, len);
            }
        } catch (FileNotFoundException e) {
            e.printStackTrace();
        } catch (IOException e) {
            e.printStackTrace();
        } finally {
            try {
                if (is != null) {
                    is.close();
                }
                if (fos != null) {
                    fos.close();
                }
            } catch (IOException e) {
                e.printStackTrace();
            }
        }
    }
	
	
	
	  2.http

    public static void main(String[] args) {
        String url = "https://127.0.0.1:8081/datacollect/webjars/springfox-swagger-ui/images/logo_small.png";
        String[] split = url.split("\\/");
        String fileName = split[split.length - 1];
        saveFile(getInputStream(url), new File("/test/", fileName));
    }

    public static InputStream getInputStream(String url) {
        try {
            HttpURLConnection httpURLConnection = (HttpURLConnection) new URL(url).openConnection();
            return httpURLConnection.getInputStream();
        } catch (IOException e) {
            e.printStackTrace();
        } catch (Exception e) {
            e.printStackTrace();
        }
        return null;
    }

    public static void saveFile(InputStream is, File dstFile) {
        FileOutputStream fos = null;
        File parentFile = dstFile.getParentFile();
        if (!parentFile.exists()) {
            parentFile.mkdirs();
        }
        try {
            fos = new FileOutputStream(dstFile);
            byte[] buff = new byte[1024 * 4];
            int len;
            while ((len = is.read(buff)) != -1) {
                fos.write(buff, 0, len);
            }
        } catch (FileNotFoundException e) {
            e.printStackTrace();
        } catch (IOException e) {
            e.printStackTrace();
        } finally {
            try {
                if (is != null) {
                    is.close();
                }
                if (fos != null) {
                    fos.close();
                }
            } catch (IOException e) {
                e.printStackTrace();
            }
        }
    }
